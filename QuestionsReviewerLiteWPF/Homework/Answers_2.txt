1、C 《美国项目管理协会道德与职业行为规范》中提到，项目管理人员的义务包括： 
熟知并遵循各项政策，规章，条例和法律，规范自己职业性和志愿性的工作； 
向有关人员反映不道德和违法的行为，同时视情况需要，上报有关人员的失职行为； 
确保对失职行为和违法活动的任何诉讼得到落实，申诉必须以事实为依据； 
绝不参与或者帮助他人参与违法活动。 
 
2、C 类似scrum，DSDM有三个主要阶段： 
初始项目活动 
项目周期活动 
结束项目活动 
类似于scrum的赛前，比赛，赛后。 
项目生命周期有五个阶段： 
可能性研究 
交易研究 
功能模型迭代 
设计和建立迭代 
安装启用。 
 
3、D 特征驱动开发（FDD）使用一个规范性的模型，当中计划，管理并从个别软件特征方面跟踪软件开发流程。 
FDD使用两周或者更短时长的短迭代来开发一定的特征。 
FDD的五个步骤是： 
1.开发整体模型； 
2.建立特征清单； 
3.依特征做规划； 
4.依特征做设计； 
5.依特征进行建立。 
 
4、B 缩写INVEST（independent独立的，negotiable可协商的，valuable有价值的，estimable可估算的，small小的和testable可测试的）有助于敏捷工作者记忆优秀的用户故事的特点。 
I-Independent独立故事是指可在任何顺序下开发，避免依赖，使开发更复杂的故事。 
N-Negotiable可协商故事是指客户和开发者可自由分析和采用用户故事来达到客户需求的故事。 
V-Valuable有价值的故事是指向客户描述产品特性如何提供价值的故事。 
E-Estimable可估算故事是指已准备就绪，开发者可用来估算开发这些用户故事所需的工作量或时长的故事。 
S-Small小故事是指需要2-5天执行的故事。 
T-Testable可测试故事是指根据接受标准可验证，来确保价值的故事。 
 
5、C 精益生产理论是指估算浪费，其中一定义的浪费类型是库存，也指限制WIP。WIP是指材料或部分已开始生产但是还未完成的产品。库存也属于浪费，因为在购买，储存和维护方面花去费用。减少库存的一个方法是通过移除最慢的机器或处理器（即系统瓶颈）来减少WIP。敏捷亦致力于通过在开发新特性前完全完成所有特性的WIP限制来控制WIP。一项迭代或者冲刺可以想象成可开发若干数量特性的一个过程。在这个类比中，WIP限制相当于
冲刺待办事项。通过保持WIP限制等同于冲刺待办事项，在冲刺审阅时所有的特性都应当完成。 
 
6、B 价值流程图是敏捷采用的精益生产分析技能，用于对形成客户产品或服务的原料和信息（即价值）的流动进行分析。 
执行价值流程图大致包括5个步骤： 
1）确认产品，客户和范围（即流程的始末）。 
2）地图作为团队或者个人现时价值流，确认流程步骤，延时和信息需求。估算流程步骤的持续时长和前置期持续时长（lead time durations）。前置期是指在发生前一项流程或者事件需等待的时长。 
3）分析价值流程图来确认浪费存在的地方（比如前置期）和流程可完善的地方（流程时间通常认为是价值增加时间，但是应尽量减少整个流程的时间，由此来缩短向客户交付价值流的时间）。 
4）通过分析，总结出一份展示价值流应努力达到的前景或者目标的未来价值流程图。 
5）通过流程完善活动（即完善）或者其他方法来达到目标的一些工作。 
 
7、A 敏捷团队必须时常处理产品待办事项里的产品特性优先级问题。从发布计划到迭代计划，敏捷团队必须优先处理产品的用户故事/特性来确保高质量和高价值的特性优先得以开发，以此帮助带来乐观和较早的投资收益。 
敏捷团队往往在相对价值和风险方面优先处理需求或用户故事/特性；价值由客户决定（即客户-价值优先级）。 
两个处理产品优先级的常用方法是：MoSCow和Kano。MoSCoW方法将产品特性分为“必需含有”，“应该含有”，“可以含有”和“会含有”四类。 
而Kano方法将特性分为“必须含有（开端）”，“不满足因素”，“满足因素”和“愉悦因素”。 
“必需含有”是指必需含有的特性。 
“不满足因素”是指反过来影响感知价值而应该移除的特性。 
“满足因素”是指此类因素越多客户越满意，能够正相关地增加感知价值的特性，但并不是必需的。 
“愉悦因素”是指能指数型地增加感知价值来满足客户的特性。 
依据风险来优先处理特性，可运用风险-价值指标。 
风险-价值指标含4个象限，横轴表示价值，竖轴表示风险。用户故事被分配到其中一个分类/象限：低价值，低风险；低价值，高风险；高价值，低风险；高价值，高风险。 
成本-价值指标同样可用这种方式形成。 
敏捷中所有的优先化都是“相对的”，也就是说一个用户故事只是相对优先于其他用户故事，而非在固定规模上得到优先处理。 
 
8、C Scrum作为一种框架，促进复杂产品迅速且高效的开发，促进对变动的需求的适应和促进工作产品的增量交付。 
Scrum开发包括3个主要阶段：游戏前，游戏中，游戏后。 
Scrum着重的是产品和冲刺待办事项的使用， 
迭代开发的使用（称为“冲刺”）， 
每日站立会议（称为“Scrum”）， 
冲刺查看和反思（称为“示范”）， 
以及信息发射源的使用，例如任务板和燃尽图。 
9、C 在敏捷架构scrum里，冲刺计划和冲刺检阅会议的时间限定在4小时内的。 
 
10、B scrum的核心角色是产品负责人，scrum主管和开发团队。 
 
11、A "控制限度可能会应用在敏捷项目中，它通过设置一个客观的限度，来指明一个过程是否受控制，或者是否稳定或者是否无缺陷（比如，在平均值的三个西格玛内）。 
三个西格玛的控制限度通常是用在休哈特控制图上。一个西格玛是指一个标准偏差。所以三个西格玛则是指在正负方向上均离平均值三个标准偏差的限度。这种限度适用于能获取正态分布曲线的普通数据。 
 
12、C TDD测试驱动开发过程具有4个基本步骤： 
1）编写测试 
2）核对和确认测试 
3）编写产品代码，接着采用测试 
4）重构产品代码。 
其中一个例子可为，用户必须记录产品的生存期值。一项完善的测试需要确保用户数据输入是一个正数，而不是不同类型的输入，比如一个字母（即编写测试）。编程人员需要验证当输入字母而不是一个数字时，程序会出现异常（即核对和确认测试）。接着编程人员编写的代码，需要用户记录产品的生存期值（即编写产品代码）。然后编程人员会运行产品代码并且输入正确和错误的产品生存期值（即采用测试）。如果产品代码运行成功，那么编程人员会重构产品代码，以完善产品的设计。遵循这4个步骤，迭代保证编程人员探讨一项软件程序首先可能会如何失败，并且建立可全面测试的产品代码。这样有助于编出高质量的代码。 
 
13、B 当启动一项新敏捷开发工作时，项目团队应该决定它的敏捷方法。这也称为流程裁剪，敏捷团队决定项目采用的敏捷实践或者标准，比如团队是否进行每日站立会议以及其持续时长，团队是否使用任何信息发射源，团队会如何估算和计划产品特性，等等。 
 
14、A 敏捷在很大程度上认为团队成员协作决策的参与性决策模式有助于在团队内建立信任。虽然团队领导者或者scrum领导需要独自作一些决策，但是大部分决策是团队集体进行。这些敏捷原则也被称为集体所有权，自主管理和自我约束。在集体所有权中，团队成员集体对项目结果负责，并被授权参与决策和问题解决流程。 
 
15、C 产品待办事项是一列所有需要在迭代中开发的产品特性综合性清单，它是不断变化的，以适应客户需求。随着项目发展，因为客户逐渐理解产品需要更完备，所以待办事项中的项目特性更明确。 
 
16、C 敏捷项目管理着重强调“持续完善”。从迭代后客户提供反馈，到迭代后团队保留时间回顾和反思执行情况，持续完善已经进入敏捷方法论中。 
进行的单元，一体化测试和适应技术/工业开发三者同样是持续完善中的一部分。 
持续完善也是精益方法论的一个重点原则，注重从价值流中清除浪费。 
 
17、D 冲刺待办事项是一栏产品特征或者将在冲刺中完成的工作事宜。通常是在冲刺里不变的除非被重要客户要求动摇了。 
 
18、B "在迭代计划中，团队根据三部曲去设计迭代待办事项： 
1.团队分解大的或复杂用户故事为多元的，小的故事 
2.团队把每个用户故事分解为开发任务 
3.团队估计任务功力或周期，通常用理想时间。 
 
19、A 在反思期间，敏捷团队在结束一项迭代后稍作休整来思量它的绩效， 
讨论话题包括： 
从成功和失败中学习，比如总结高效或低效的方法； 
如何施行成功的行为，比如新测试的标准； 
如何停止消极的行为，比如用偏离团队认可的代码标准来指定迭代期限。 
 
20、C 关于水晶开发方法一个首要原则就是渗透沟通。 
 
21、A 验收测试驱动开发（ATDD）与测试驱动开发（TDD）类似，在于它同样需要编程人员在产品代码前编写出测试。 
验收测试驱动开发的测试旨在验证预期软件中的特性/行为。 
验收测试驱动开发的迭代迭代的4个步骤可简记为4个Ds： 
1）Discuss讨论 
2）Distill提取 
3）Develop开发 
4）Demo示范。 
1）Discuss讨论：敏捷团队和客户或者商业干系人详细讨论用户故事，包含用户故事应有和不应有的预期行为。 
2）Distill提取：开发团队研习讨论中的条目并提取成可验证和确认这些行为的测试。提取流程中，整个团队应充分认识“完成”对用户故事的意义，这正是验收标准所在。 
3）Develop开发：提取后，团队开发测试代码和产品代码以产生产品特性。 
4）Demo示范：产品特性开发后，团队向客户或商业干系人展示以获得反馈。 
 
22、A 类似scrum，DSDM有三个主要阶段： 
初始项目活动 
项目周期活动 
结束项目活动 
类似于scrum的赛前，比赛，赛后。 
项目生命周期有五个阶段： 
可能性研究 
交易研究 
功能模型迭代 
设计和建立迭代 
安装启用。 
 
23、D 特征驱动开发（FDD）使用一个规范性的模型，当中计划，管理并从个别软件特征方面跟踪软件开发流程。 
FDD使用两周或者更短时长的短迭代来开发一定的特征。 
FDD的五个步骤是： 
1.开发整体模型； 
2.建立特征清单； 
3.依特征做规划； 
4.依特征做设计； 
5.依特征进行建立。 
 
24、D TDD测试驱动开发过程具有4个基本步骤： 
1）编写测试 
2）核对和确认测试 
3）编写产品代码，接着采用测试 
4）重构产品代码。 
其中一个例子可为，用户必须记录产品的生存期值。一项完善的测试需要确保用户数据输入是一个正数，而不是不同类型的输入，比如一个字母（即编写测试）。编程人员需要验证当输入字母而不是一个数字时，程序会出现异常（即核对和确认测试）。接着编程人员编写的代码，需要用户记录产品的生存期值（即编写产品代码）。然后编程人员会运行产品代码并且输入正确和错误的产品生存期值（即采用测试）。如果产品代码运行成功，那么编程人员会重构产品代码，以完善产品的设计。遵循这4个步骤，迭代保证编程人员探讨一项软件程序首先可能会如何失败，并且建立可全面测试的产品代码。这样有助于编出高质量的代码。 
 
25、C 常见的敏捷架构/方法论包括： 
scrum， 
XP极限编程， 
精益软件开发， 
水晶， 
特性驱动开发（FDD）， 
动态系统开发方法（DSDM）， 
敏捷统一过程（AUP）。 
 
26、D 持续整合的极限编程（XP）原则是代码建立后即集成到完整代码库。由此集成后，代码库和整个系统即建成和测试完成。持续整合只是提高快速软件交付和集成缺陷早期探测的一个极限编程的原则。持续整合理论上是指随时有可传输的工作产品。 
 
27、A 水晶是软件开发灵活轻便方法的方法家族。方法家族是区分成员的颜色代码，例如透明，黄色，红色。颜色的选择取决于成果水平的要求。在光谱一端是完全透明的。 
不考虑颜色，水晶架构是迭代的并且有三个基本过程： 
章程 
交付迭代 
项目总结。 
水晶纲领包括： 
建设团队， 
做探索性的360， 
为团队定义实践标准， 
建立初始项目计划。 
在交付周期中，水晶团队开发，集成。像其他敏捷架构，水晶包括协定事件，像站立会议和
反思提高工作室。在包装中团队总结项目，进行完成仪式。 
 
28、A 团队速度是3*4+2*3=18。未完成的故事里的故事点是不包含在速度指标中的。 
 
29、D 代码重构是完善工作源代码的方法，以提高源代码的有效性，可读性，拓展性，可维护性和降低复杂性。通过重构，可在不改变外部行为的情况下，重构源代码来改良内部代码。 
 
30、B 《美国项目管理协会敏捷社区实践社区章程》提出的社区价值包括： 
前景 
仆人式领导力 
信任 
协作 
诚实 
好学 
勇气 
开放 
适应力 
领导变革 
透明化。 
 
31、D 验收测试驱动开发（ATDD）与测试驱动开发（TDD）类似，在于它同样需要编程人员在产品代码前编写出测试。 
验收测试驱动开发的测试旨在验证预期软件中的特性/行为。 
验收测试驱动开发的迭代迭代的4个步骤可简记为4个Ds： 
1）Discuss讨论 
2）Distill提取 
3）Develop开发 
4）Demo示范。 
1）Discuss讨论：敏捷团队和客户或者商业干系人详细讨论用户故事，包含用户故事应有和不应有的预期行为。 
2）Distill提取：开发团队研习讨论中的条目并提取成可验证和确认这些行为的测试。提取流程中，整个团队应充分认识“完成”对用户故事的意义，这正是验收标准所在。 
3）Develop开发：提取后，团队开发测试代码和产品代码以产生产品特性。 
4）Demo示范：产品特性开发后，团队向客户或商业干系人展示以获得反馈。 
 
32、C 验收测试驱动开发（ATDD）与测试驱动开发（TDD）类似，在于它同样需要编程人员在产品代码前编写出测试。验收测试驱动开发的测试旨在验证预期软件中的特性/行为。 
验收测试驱动开发的迭代迭代的4个步骤可简记为4个Ds： 
1）Discuss讨论， 
2）Distill提取， 
3）Develop开发， 
4）Demo示范。 
1）Discuss讨论：敏捷团队和客户或者商业干系人详细讨论用户故事，包含用户故事应有和
不应有的预期行为。 
2）Distill提取：开发团队研习讨论中的条目并提取成可验证和确认这些行为的测试。提取流程中，整个团队应充分认识“完成”对用户故事的意义，这正是验收标准所在。 
3）Develop开发：提取后，团队开发测试代码和产品代码以产生产品特性。 
4）Demo示范：产品特性开发后，团队向客户或商业干系人展示以获得反馈。 
 
33、B 验收测试驱动开发（ATDD）与测试驱动开发（TDD）类似，在于它同样需要编程人员在产品代码前编写出测试。 
验收测试驱动开发的测试旨在验证预期软件中的特性/行为。 
验收测试驱动开发的迭代迭代的4个步骤可简记为4个Ds： 
1）Discuss讨论 
2）Distill提取 
3）Develop开发 
4）Demo示范。 
1）Discuss讨论：敏捷团队和客户或者商业干系人详细讨论用户故事，包含用户故事应有和不应有的预期行为。 
2）Distill提取：开发团队研习讨论中的条目并提取成可验证和确认这些行为的测试。提取流程中，整个团队应充分认识“完成”对用户故事的意义，这正是验收标准所在。 
3）Develop开发：提取后，团队开发测试代码和产品代码以产生产品特性。 
4）Demo示范：产品特性开发后，团队向客户或商业干系人展示以获得反馈。 
 
34、B 验收测试驱动开发（ATDD）与测试驱动开发（TDD）类似，在于它同样需要编程人员在产品代码前编写出测试。 
验收测试驱动开发的测试旨在验证预期软件中的特性/行为。 
验收测试驱动开发的迭代迭代的4个步骤可简记为4个Ds： 
1）Discuss讨论 
2）Distill提取 
3）Develop开发 
4）Demo示范。 
1）Discuss讨论：敏捷团队和客户或者商业干系人详细讨论用户故事，包含用户故事应有和不应有的预期行为。 
2）Distill提取：开发团队研习讨论中的条目并提取成可验证和确认这些行为的测试。提取流程中，整个团队应充分认识“完成”对用户故事的意义，这正是验收标准所在。 
3）Develop开发：提取后，团队开发测试代码和产品代码以产生产品特性。 
4）Demo示范：产品特性开发后，团队向客户或商业干系人展示以获得反馈。 
 
35、A 验收测试驱动开发（ATDD）与测试驱动开发（TDD）类似，在于它同样需要编程人员在产品代码前编写出测试。 
验收测试驱动开发的测试旨在验证预期软件中的特性/行为。 
验收测试驱动开发的迭代迭代的4个步骤可简记为4个Ds： 
1）Discuss讨论：敏捷团队和客户或者商业干系人详细讨论用户故事，包含用户故事应有和不应有的预期行为。 
2）Distill提取：开发团队研习讨论中的条目并提取成可验证和确认这些行为的测试。提取流程中，整个团队应充分认识“完成”对用户故事的意义，这正是验收标准所在。 
3）Develop开发：提取后，团队开发测试代码和产品代码以产生产品特性。 
4）Demo示范：产品特性开发后，团队向客户或商业干系人展示以获得反馈。 
 
36、C 特征驱动开发（FDD）使用一个规范性的模型，当中计划，管理并从个别软件特征方面跟踪软件开发流程。 
FDD使用两周或者更短时长的短迭代来开发一定的特征。 
FDD的五个步骤是： 
1.开发整体模型； 
2.建立特征清单； 
3.依特征做规划； 
4.依特征做设计； 
5.依特征进行建立。 
 
37、C 特征驱动开发（FDD）使用一个规范性的模型，当中计划，管理并从个别软件特征方面跟踪软件开发流程。 
FDD使用两周或者更短时长的短迭代来开发一定的特征。 
FDD的五个步骤是： 
1.开发整体模型； 
2.建立特征清单； 
3.依特征做规划； 
4.依特征做设计； 
5.依特征进行建立。 
 
38、D 精益软件开发的原则是： 
清除浪费； 
强化学习； 
尽可能晚决策； 
尽可能早交付； 
授权团队； 
构建完整性； 
全盘检视。 
 
39、D 精益生产理论是指估算浪费，其中一定义的浪费类型是库存，也指限制WIP。WIP是指材料或部分已开始生产但是还未完成的产品。库存也属于浪费，因为在购买，储存和维护方面花去费用。减少库存的一个方法是通过移除最慢的机器或处理器（即系统瓶颈）来减少WIP。敏捷亦致力于通过在开发新特性前完全完成所有特性的WIP限制来控制WIP。一项迭代或者冲刺可以想象成可开发若干数量特性的一个过程。在这个类比中，WIP限制相当于冲刺待办事项。通过保持WIP限制等同于冲刺待办事项，在冲刺审阅时所有的特性都应当完成。 
 
40、A 精益生产理论是指估算浪费，其中一定义的浪费类型是库存，也指限制WIP。WIP是指材料或部分已开始生产但是还未完成的产品。库存也属于浪费，因为在购买，储存和维护方面花去费用。减少库存的一个方法是通过移除最慢的机器或处理器（即系统瓶颈）来减少WIP。敏捷亦致力于通过在开发新特性前完全完成所有特性的WIP限制来控制WIP。一项
迭代或者冲刺可以想象成可开发若干数量特性的一个过程。在这个类比中，WIP限制相当于冲刺待办事项。通过保持WIP限制等同于冲刺待办事项，在冲刺审阅时所有的特性都应当完成。 
41、B 价值流程图是一项协作性地流程分析技能，一支功能多样的团队绘制一个流程来识别浪费发生的地方并且确认可完善的地方。它是流程分析技能的一个例子。 
和价值流程图类似，流程图也用于绘制一个流程来识别瓶颈（即流程会减缓和产生库存的地方）。 
 
42、A 价值流程图是一项协作性地流程分析技能，一支功能多样的团队绘制一个流程来识别浪费发生的地方并且确认可完善的地方。它是流程分析技能的一个例子。 
和价值流程图类似，流程图也用于绘制一个流程来识别瓶颈（即流程会减缓和产生库存的地方）。 
 
43、A 价值流程图是一项协作性地流程分析技能，一支功能多样的团队绘制一个流程来识别浪费发生的地方并且确认可完善的地方。它是流程分析技能的一个例子。 
和价值流程图类似，流程图也用于绘制一个流程来识别瓶颈（即流程会减缓和产生库存的地方）。 
 
44、C 价值流程图是一项协作性地流程分析技能，一支功能多样的团队绘制一个流程来识别浪费发生的地方并且确认可完善的地方。它是流程分析技能的一个例子。 
和价值流程图类似，流程图也用于绘制一个流程来识别瓶颈（即流程会减缓和产生库存的地方）。 
 
45、A 价值流程图是一项协作性地流程分析技能，一支功能多样的团队绘制一个流程来识别浪费发生的地方并且确认可完善的地方。它是流程分析技能的一个例子。 
和价值流程图类似，流程图也用于绘制一个流程来识别瓶颈（即流程会减缓和产生库存的地方）。 
 
46、C 价值流程图是一项协作性地流程分析技能，一支功能多样的团队绘制一个流程来识别浪费发生的地方并且确认可完善的地方。它是流程分析技能的一个例子。 
和价值流程图类似，流程图也用于绘制一个流程来识别瓶颈（即流程会减缓和产生库存的地方）。 
 
47、B 价值流程图是一项协作性地流程分析技能，一支功能多样的团队绘制一个流程来识别浪费发生的地方并且确认可完善的地方。它是流程分析技能的一个例子。 
和价值流程图类似，流程图也用于绘制一个流程来识别瓶颈（即流程会减缓和产生库存的地方）。 
 
48、A 价值流程图是敏捷采用的精益生产分析技能，用于对形成客户产品或服务的原料和信息（即价值）的流动进行分析。 
执行价值流程图大致包括5个步骤： 
1）确认产品，客户和范围（即流程的始末）。 
2）地图作为团队或者个人现时价值流，确认流程步骤，延时和信息需求。估算流程步骤的持续时长和前置期持续时长（lead time durations）。前置期是指在发生前一项流程或者事件
需等待的时长。 
3）分析价值流程图来确认浪费存在的地方（比如前置期）和流程可完善的地方（流程时间通常认为是价值增加时间，但是应尽量减少整个流程的时间，由此来缩短向客户交付价值流的时间）。 
4）通过分析，总结出一份展示价值流应努力达到的前景或者目标的未来价值流程图。 
5）通过流程完善活动（即完善）或者其他方法来达到目标的一些工作。 
 
49、D 价值流程图是敏捷采用的精益生产分析技能，用于对形成客户产品或服务的原料和信息（即价值）的流动进行分析。 
执行价值流程图大致包括5个步骤： 
1）确认产品，客户和范围（即流程的始末）。 
2）地图作为团队或者个人现时价值流，确认流程步骤，延时和信息需求。估算流程步骤的持续时长和前置期持续时长（lead time durations）。前置期是指在发生前一项流程或者事件需等待的时长。 
3）分析价值流程图来确认浪费存在的地方（比如前置期）和流程可完善的地方（流程时间通常认为是价值增加时间，但是应尽量减少整个流程的时间，由此来缩短向客户交付价值流的时间）。 
4）通过分析，总结出一份展示价值流应努力达到的前景或者目标的未来价值流程图。 
5）通过流程完善活动（即完善）或者其他方法来达到目标的一些工作。 
 
50、A 价值流程图是敏捷采用的精益生产分析技能，用于对形成客户产品或服务的原料和信息（即价值）的流动进行分析。 
执行价值流程图大致包括5个步骤： 
1）确认产品，客户和范围（即流程的始末）。 
2）地图作为团队或者个人现时价值流，确认流程步骤，延时和信息需求。估算流程步骤的持续时长和前置期持续时长（lead time durations）。前置期是指在发生前一项流程或者事件需等待的时长。 
3）分析价值流程图来确认浪费存在的地方（比如前置期）和流程可完善的地方（流程时间通常认为是价值增加时间，但是应尽量减少整个流程的时间，由此来缩短向客户交付价值流的时间）。 
4）通过分析，总结出一份展示价值流应努力达到的前景或者目标的未来价值流程图。 
5）通过流程完善活动（即完善）或者其他方法来达到目标的一些工作。 
 
51、B 价值流程图是敏捷采用的精益生产分析技能，用于对形成客户产品或服务的原料和信息（即价值）的流动进行分析。 
执行价值流程图大致包括5个步骤： 
1）确认产品，客户和范围（即流程的始末）。 
2）地图作为团队或者个人现时价值流，确认流程步骤，延时和信息需求。估算流程步骤的持续时长和前置期持续时长（lead time durations）。前置期是指在发生前一项流程或者事件需等待的时长。 
3）分析价值流程图来确认浪费存在的地方（比如前置期）和流程可完善的地方（流程时间通常认为是价值增加时间，但是应尽量减少整个流程的时间，由此来缩短向客户交付价值流的时间）。 
4）通过分析，总结出一份展示价值流应努力达到的前景或者目标的未来价值流程图。 
5）通过流程完善活动（即完善）或者其他方法来达到目标的一些工作。 
 
52、A 价值流程图是敏捷采用的精益生产分析技能，用于对形成客户产品或服务的原料和信息（即价值）的流动进行分析。 
执行价值流程图大致包括5个步骤： 
1）确认产品，客户和范围（即流程的始末）。 
2）地图作为团队或者个人现时价值流，确认流程步骤，延时和信息需求。估算流程步骤的持续时长和前置期持续时长（lead time durations）。前置期是指在发生前一项流程或者事件需等待的时长。 
3）分析价值流程图来确认浪费存在的地方（比如前置期）和流程可完善的地方（流程时间通常认为是价值增加时间，但是应尽量减少整个流程的时间，由此来缩短向客户交付价值流的时间）。 
4）通过分析，总结出一份展示价值流应努力达到的前景或者目标的未来价值流程图。 
5）通过流程完善活动（即完善）或者其他方法来达到目标的一些工作。 
 
53、D 价值流程图是敏捷采用的精益生产分析技能，用于对形成客户产品或服务的原料和信息（即价值）的流动进行分析。 
执行价值流程图大致包括5个步骤： 
1）确认产品，客户和范围（即流程的始末）。 
2）地图作为团队或者个人现时价值流，确认流程步骤，延时和信息需求。估算流程步骤的持续时长和前置期持续时长（lead time durations）。前置期是指在发生前一项流程或者事件需等待的时长。 
3）分析价值流程图来确认浪费存在的地方（比如前置期）和流程可完善的地方（流程时间通常认为是价值增加时间，但是应尽量减少整个流程的时间，由此来缩短向客户交付价值流的时间）。 
4）通过分析，总结出一份展示价值流应努力达到的前景或者目标的未来价值流程图。 
5）通过流程完善活动（即完善）或者其他方法来达到目标的一些工作。 
 
54、C 价值流程图是敏捷采用的精益生产分析技能，用于对形成客户产品或服务的原料和信息（即价值）的流动进行分析。 
执行价值流程图大致包括5个步骤： 
1）确认产品，客户和范围（即流程的始末）。 
2）地图作为团队或者个人现时价值流，确认流程步骤，延时和信息需求。估算流程步骤的持续时长和前置期持续时长（lead time durations）。前置期是指在发生前一项流程或者事件需等待的时长。 
3）分析价值流程图来确认浪费存在的地方（比如前置期）和流程可完善的地方（流程时间通常认为是价值增加时间，但是应尽量减少整个流程的时间，由此来缩短向客户交付价值流的时间）。 
4）通过分析，总结出一份展示价值流应努力达到的前景或者目标的未来价值流程图。 
5）通过流程完善活动（即完善）或者其他方法来达到目标的一些工作。 
 
55、D 精益软件开发架构中存在的两种完整性类型有：概念性的和感知性的。 
概念上的完整性是由开发者决定的，如果产品集成良好和功能详细，那么完整性大体上会非常高。 
感知上的完整性是由客户观察得出的，如果客户最初对产品满意和在之后产品满足需求，那么完整性会很高。 
 
56、B NPV净现值：用来分析一项投资或项目的收益率的指标，是现金流入现值和现金流出现值之间的差异。 
净现值计算一项投资或项目会产生的未来资金流入的估值，是每一项投资中对预期时长的现金流入/流出的总和。 
每一项现金流入/流出返回到现值（PV）（即现值中哪一部分钱是有价值的）。 
净现值是以下的总和：NPV=[Rt /(1+i)^t] ，其中t=现金流动的时间，i =贴现率（金融市场中可赚取的贴现报酬率），Rt=净现金流入或流出。 
例如：就接下来两年期间，贴现率是5%，初始投资成本是500美元。在第一年末，预期的现金流入是200美元，在第二年末，预期的现金流入是1000美元。那么NPV=-500+200/(1.05)^1+1000/(1.05)^2= ~597美元。 
如果NPV 是正数，意味着投资会向买家的投资组合增加价值。 
如果NPV是负数，意味着会削减价值。 
如果NPV 是零，意味着既不会在买家的投资组合中增加价值也不会削减价值。 
 
57、D 因为敏捷中scrum框架的基石是“一直存在一个理论上可传输的产品”，所以对于团队和产品负责人来说以下两点非常重要：定义“完成”，或终结状态下需要以何标准考虑用户的特性和功能。 
 
58、C TDD测试驱动开发过程具有4个基本步骤： 
1）编写测试 
2）核对和确认测试 
3）编写产品代码，接着测试 
4）重构产品代码。 
其中一个例子可为，用户必须记录产品的生存期值。一项完善的测试需要确保用户数据输入是一个正数，而不是不同类型的输入，比如一个字母（即编写测试）。编程人员需要验证当输入字母而不是一个数字时，程序会出现异常（即核对和确认测试）。接着编程人员编写的代码，需要用户记录产品的生存期值（即编写产品代码）。然后编程人员会运行产品代码并且输入正确和错误的产品生存期值（即采用测试）。如果产品代码运行成功，那么编程人员会重构产品代码，以完善产品的设计。遵循这4个步骤，迭代保证编程人员探讨一项软件程序首先可能会如何失败，并且建立可全面测试的产品代码。这样有助于编出高质量的代码。 
 
59、B TDD测试驱动开发过程具有4个基本步骤： 
1）编写测试 
2）核对和确认测试 
3）编写产品代码，接着采用测试 
4）重构产品代码。 
其中一个例子可为，用户必须记录产品的生存期值。一项完善的测试需要确保用户数据输入是一个正数，而不是不同类型的输入，比如一个字母（即编写测试）。编程人员需要验证当输入字母而不是一个数字时，程序会出现异常（即核对和确认测试）。接着编程人员编写的代码，需要用户记录产品的生存期值（即编写产品代码）。然后编程人员会运行产品代码并且输入正确和错误的产品生存期值（即采用测试）。如果产品代码运行成功，那么编程人员
会重构产品代码，以完善产品的设计。遵循这4个步骤，迭代保证编程人员探讨一项软件程序首先可能会如何失败，并且建立可全面测试的产品代码。这样有助于编出高质量的代码。 
 
60、D TDD测试驱动开发过程具有4个基本步骤： 
1）编写测试 
2）核对和确认测试 
3）编写产品代码，接着采用测试 
4）重构产品代码。 
其中一个例子可为，用户必须记录产品的生存期值。一项完善的测试需要确保用户数据输入是一个正数，而不是不同类型的输入，比如一个字母（即编写测试）。编程人员需要验证当输入字母而不是一个数字时，程序会出现异常（即核对和确认测试）。接着编程人员编写的代码，需要用户记录产品的生存期值（即编写产品代码）。然后编程人员会运行产品代码并且输入正确和错误的产品生存期值（即采用测试）。如果产品代码运行成功，那么编程人员会重构产品代码，以完善产品的设计。遵循这4个步骤，迭代保证编程人员探讨一项软件程序首先可能会如何失败，并且建立可全面测试的产品代码。这样有助于编出高质量的代码。 
 
61、C TDD测试驱动开发过程具有4个基本步骤： 
1）编写测试 
2）核对和确认测试 
3）编写产品代码，接着测试 
4）重构产品代码。 
其中一个例子可为，用户必须记录产品的生存期值。一项完善的测试需要确保用户数据输入的是一个正数，而不是不同类型的输入，比如一个字母（即编写测试）。当输入字母而不是一个数字时，编程人员需要验证，程序会出现异常（即核对和确认测试）。接着编程人员编写的代码，需要用户记录产品的生存期值（即编写产品代码）。然后编程人员会运行产品代码并且输入正确和错误的产品生存期值（即采用测试）。如果产品代码运行成功，那么编程人员会重构产品代码，以完善产品的设计。遵循这4个步骤，迭代保证编程人员探讨一项软件程序首先可能会如何失败，并且建立可全面测试的产品代码。这样有助于编出高质量的代码。 
 
62、C 精益生产理论是指估算浪费，其中一定义的浪费类型是库存，也指限制WIP。WIP是指材料或部分已开始生产但是还未完成的产品。库存也属于浪费，因为在购买，储存和维护方面花去费用。减少库存的一个方法是通过移除最慢的机器或处理器（即系统瓶颈）来减少WIP。敏捷亦致力于通过在开发新特性前完全完成所有特性的WIP限制来控制WIP。一项迭代或者冲刺可以想象成可开发若干数量特性的一个过程。在这个类比中，WIP限制相当于冲刺待办事项。通过保持WIP限制等同于冲刺待办事项，在冲刺审阅时所有的特性都应当完成。 
 
63、C XP极限编程用语中“caves和common”指的是，为团队成员创造的两个分区。 
公共范围是一个公共的空间，在此常有渗透沟通和协作。 
洞穴区域是一个私人的交易预留空间，需要一个孤立且安静的环境。 
为了维护公共领域，每一名团队成员应当工作于一个且是同一个的项目上。 
 
64、C "极限编程(XP)是一项以编程人员为中心的敏捷架构，注重小而迅速的发布。 
XP极限编程强调以下原则： 
结对编程 
可持续速度 
不断自动测试 
有效沟通 
简单性 
反馈 
勇气 
集体所有权 
持续整合 
激励工作 
共享工作空间 
现场客户代表 
使用隐喻说明概念。 
 
65、D 极限编程(XP)是一项以编程人员为中心的敏捷架构，注重小而迅速的发布。 
XP极限编程强调以下原则： 
结对编程 
可持续速度 
不断自动测试 
有效沟通 
简单性 
反馈 
勇气 
集体所有权 
持续整合 
激励工作 
共享工作空间 
现场客户代表 
使用隐喻说明概念。 
 
66、D 极限编程(XP)是一项以编程人员为中心的敏捷架构，注重小而迅速的发布。 
XP极限编程强调以下原则： 
结对编程 
可持续速度 
不断自动测试 
有效沟通 
简单性 
反馈 
勇气 
集体所有权 
持续整合 
激励工作 
共享工作空间 
现场客户代表 
使用隐喻说明概念。 
 
67、A 极限编程(XP)是一项以编程人员为中心的敏捷架构，注重小而迅速的发布。 
XP极限编程强调以下原则： 
结对编程 
可持续速度 
不断自动测试 
有效沟通 
简单性 
反馈 
勇气 
集体所有权 
持续整合 
激励工作 
共享工作空间 
现场客户代表 
使用隐喻说明概念。 
 
68、D 常见的敏捷架构/方法论包括： 
scrum， 
XP极限编程， 
精益软件开发， 
水晶， 
特性驱动开发（FDD）， 
动态系统开发方法（DSDM）， 
敏捷统一过程（AUP）。 
 
69、B 持续整合的极限编程（XP）原则是代码建立后即集成到完整代码库。由此集成后，代码库和整个系统即建成和测试完成。持续整合只是提高快速软件交付和集成缺陷早期探测的一个极限编程的原则。持续整合理论上是指随时有可传输的工作产品。 
 
70、A 持续整合的极限编程（XP）原则是代码建立后即集成到完整代码库。由此集成后，代码库和整个系统即建成和测试完成。持续整合只是提高快速软件交付和集成缺陷早期探测的一个极限编程的原则。持续整合理论上是指随时有可传输的工作产品。 
 
71、C 持续整合的极限编程（XP）原则是代码建立后即集成到完整代码库。由此集成后，代码库和整个系统即建成和测试完成。持续整合只是提高快速软件交付和集成缺陷早期试验的一个极限编程的原则。持续整合理论上是指随时有可传输的工作产品。 
 
72、A 持续整合的极限编程（XP）原则是代码建立后即集成到完整代码库。由此集成后，代码库和整个系统即建成和测试完成。持续整合只是提高快速软件交付和集成缺陷早期试验的一个极限编程的原则。持续整合理论上是指随时有可传输的工作产品。 
 
73、C 持续整合的极限编程（XP）原则是代码建立后即集成到完整代码库。由此集成后，代码库和整个系统即建成和测试完成。持续整合只是提高快速软件交付和集成缺陷早期探测的一个极限编程的原则。持续整合理论上是指随时有可传输的工作产品。 
 
74、A 持续整合的极限编程（XP）原则是代码建立后即集成到完整代码库。由此集成后，代码库和整个系统即建成和测试完成。持续整合只是提高快速软件交付和集成缺陷早期探测的一个极限编程的原则。持续整合理论上是指随时有可传输的工作产品。 
 
75、C 反思提高研讨会是水晶方法论的基石。所有的敏捷方法论将反思并入到他们的标准实践中，水晶方法论将这种实践称为“反思提高研讨会”。 
 
76、D 反思提高研讨会是水晶方法论的基石。所有的敏捷方法论将反思并入到他们的标准实践中，水晶方法论将这种实践称为“反思提高研讨会”。 
 
77、A 一支高绩效敏捷团队是渗透沟通和面谈式互动的理想组合。 
对于分布式团队，在没有组合的情况下，一些经验可以提供有效沟通的最佳形式： 
团队内部网站 
虚拟团队空间 
电邮视频会议 
地理分离，特别是世界范围的，团队要考虑语言，文化，时区不同。 
 
78、A 有效沟通是敏捷的奠基石。沟通是在不同部分传递信息。沟通管理是敏捷的一个知识和技术区域。PMI除此之外有几个关于沟通的定义。 
1.沟通计划：确定项目干系人信息和沟通的需要 
2.信息分布：适时地提供给项目干系人需要的信息 
3.绩效报告：收集，分派绩效信息，包括状态报告，进展衡量，预告 
4.管理项目干系人：管理沟通去满足要求还有和项目干系人一起解决问题。 
从敏捷角度而言： 
团队间的沟通建立在过程中，通过协作，信息散热器，日常站立会议，回顾等促进。 
虽然希望产品负责人，顾客，用户能高度参与项目并使用沟通技巧，但如果情况并非如此，那么一个对干系人表达信息的计划可能是被需要的。 
 
79、D 水晶是软件开发灵活轻便方法的方法家族。方法家族是区分成员的颜色代码，例如透明，黄色，红色。颜色的选择取决于成果水平的要求。在光谱一端是完全透明的。 
不考虑颜色，水晶架构是迭代的并且有三个基本过程： 
章程 
交付迭代 
项目总结。 
水晶纲领包括： 
建设团队， 
做探索性的360， 
为团队定义实践标准， 
建立初始项目计划。 
在交付周期中，水晶团队开发，集成。像其他敏捷架构，水晶包括协定事件，像站立会议和
反思提高工作室。在包装中团队总结项目，进行完成仪式。 
 
80、A 水晶是软件开发灵活轻便方法的方法家族。方法家族是区分成员的颜色代码，例如透明，黄色，红色。颜色的选择取决于成果水平的要求。在光谱一端是完全透明的。 
不考虑颜色，水晶架构是迭代的并且有三个基本过程： 
章程 
交付迭代 
项目总结。 
水晶纲领包括： 
建设团队， 
做探索性的360， 
为团队定义实践标准， 
建立初始项目计划。 
在交付周期中，水晶团队开发，集成。像其他敏捷架构，水晶包括协定事件，像站立会议和反思提高工作室。在包装中团队总结项目，进行完成仪式。 
 
81、B 水晶是软件开发灵活轻便方法的方法家族。方法家族是区分成员的颜色代码，例如透明，黄色，红色。颜色的选择取决于成果水平的要求。在光谱一端是完全透明的。 
不考虑颜色，水晶架构是迭代的并且有三个基本过程： 
章程 
交付迭代 
项目总结。 
水晶纲领包括： 
建设团队， 
做探索性的360， 
为团队定义实践标准， 
建立初始项目计划。 
在交付周期中，水晶团队开发，集成。像其他敏捷架构，水晶包括协定事件，像站立会议和反思提高工作室。在包装中团队总结项目，进行完成仪式。 
 
82、D 水晶是软件开发灵活轻便方法的方法家族。方法家族是区分成员的颜色代码，例如透明，黄色，红色。颜色的选择取决于成果水平的要求。在光谱一端是完全透明的。 
不考虑颜色，水晶架构是迭代的并且有三个基本过程： 
章程 
交付迭代 
项目总结。 
水晶纲领包括： 
建设团队， 
做探索性的360， 
为团队定义实践标准， 
建立初始项目计划。 
在交付周期中，水晶团队开发，集成。像其他敏捷架构，水晶包括协定事件，像站立会议和反思提高工作室。在包装中团队总结项目，进行完成仪式。 
 
83、C 水晶是软件开发灵活轻便方法的方法家族。方法家族是区分成员的颜色代码，例如透明，黄色，红色。颜色的选择取决于成果水平的要求。在光谱一端是完全透明的。 
不考虑颜色，水晶架构是迭代的并且有三个基本过程： 
章程 
交付迭代 
项目总结。 
水晶纲领包括： 
建设团队， 
做探索性的360， 
为团队定义实践标准， 
建立初始项目计划。 
在交付周期中，水晶团队开发，集成。像其他敏捷架构，水晶包括协定事件，像站立会议和反思提高工作室。在包装中团队总结项目，进行完成仪式。 
 
84、A 水晶方法论是软件开发的灵活和轻便的一系列方法学。这一系列方法学运用色标来相互区别（比如透明，黄色，橙色和红色），颜色依据所需的负荷水平来决定。在光谱的一端是水晶透明的，表示较小负荷，而水晶红色则表示较大符合。 
不考虑颜色，水晶架构是迭代的并且有三个基本过程： 
章程 
交付迭代 
项目总结。 
水晶纲领包括： 
建设团队， 
做探索性的360， 
为团队定义实践标准， 
建立初始项目计划。 
在交付迭代，水晶团队在持续1周至2个月的迭代中，迭代地开发，整合，测试和发布产品。像其他敏捷架构，水晶架构包括协作性事件，比如站立会议和反思提高研讨会。在完成时，团队总结项目并举行完成仪式，在此团队反思整个项目。 
 
85、C 不仅在敏捷中，富有动力的团队对任何项目都至关重要。富有动力的团队运作更流畅，生产效率高，表现超越期望值。 
可提高动力的简单步骤包括： 
1）共度黄金时间，团队成员可在个人层面上了解他人以此营造社区氛围， 
2）提供反馈，指导和训练，赞扬和感谢团队成员的出色工作，同时为技能和能力提升提供指导和训练， 
3）授权，授权团队成员作关键决策，在此期间，建立信任并显示领导对团队能力的信任。 
 
86、D 停车场图表是一个敏捷文档，用来对用户故事按主题进行分类和管理，往往包括确定主题的名称，用户故事的数量及其包含的故事点，以及展现故事点完成百分比的进度图表。例如，一个停车场图表可命为“数据库”主题，包含6个用户故事，完成度为50%的80个故事点。50%的完成度表明40个故事点已经完成，但并不是这3个故事以完成，因为所有故事的用功并不是均等的。 
 
87、B “完成”目录中应收录完全开发，测试和验证并合成到产品中，不需要继续关注的任务。“完成”目录中不应收录不完整的任务，而应是真正完全完成的。 
 
88、C 信息发射源不会提高软件开发者的效率。使用信息发射源的优点包括：减少冗长的沟通，仅允许所有团队成员和干系人查看整个项目状态，同时减少对更长耗时的沟通方式的需求，如电子邮件或备忘录。 
 
89、A 验收标准通常在发布计划和用户故事定义串联确定的；但是，验收标准也可以在故事被选入迭代后在迭代计划中确定。一个不变的准则就是，验收标准必须在开发前确定。就像敏捷团队，验收标准的确定是不断改变的，作为与产品负责人的交流。 
 
90、B 用于定义用户故事的罗恩•杰弗里斯的3C是卡片，对话和确认。 
 
91、C 一个用户故事包含3个基本要素： 
一个角色，一个目标和一个可达到的商业价值，通常的形式是：“作为，我需要，由此我可以。” 
例如“作为一名网上客户，我需要有能力通过产品名称和描述来进行搜索，由此可在购物车中添加产品。”  
 
92、C "在敏捷设计流程中，原型有助于客户了解当前设计状态。 
3种常见的原型是HTML，书面（即概述）和线框。 
线框是用户界面的概述，确认它的内容，设计和设计功能，常是黑白色，剔除细节性的图片和图像。线框可在纸上，白板或者软件上创作。 
 
93、D 因为价值在整个迭代过程中是增量和迭代性交付的，所有价值和流程通常是在每一次迭代后进行衡量。 
 
94、D 敏捷开发的基石是“增量交付”。增量交付是指为及时反馈和接纳，频繁向客户交付连续改善的工作产品。为演示和反馈，往往在每一个冲刺或迭代的末期交付产品。这项反馈技能，可使客户评价产品并提出新的需求。在敏捷流程中，接受变动/更新/改善的需求，以确保客户得到有价值和质量的产品。一个冲刺或迭代往往持续2-4周，最后，渐进地交付一个新的并改善的产品。 
 
95、A 敏捷开发的基石是“增量交付”。增量交付是指为及时反馈和接纳，频繁向客户交付连续改善的工作产品。为演示和反馈，往往在每一个冲刺或迭代的末期交付产品。这项反馈技能，可使客户评价产品并提出新的需求。在敏捷流程中，接受变动/更新/改善的需求，以确保客户得到有价值和质量的产品。一个冲刺或迭代往往持续2-4周，最后，渐进地交付一个新的并改善的产品。 
 
96、D EVM，挣值管理，是根据成本和计划用于评估项目绩效的管理技巧。依赖于其他普遍经济标准，像完成预算（BAC），实际成本（AC），计划价值（PV），获得价值（EV），成本变化（CV），计划变化（SV），成本绩效指数（CPI），计划绩效指数（SPI）。CV和SV能被转换为CPI和SPI的绩效指标，追踪记录逐渐去呈现进度。BAC是总项目预算。AC 是目前实际成本。PV是项目在给定时间内的计划价值；你能通过现在周数或计划周数的比率乘BAC计
算得（15周里有5周$15,000项目=$5,000PV）。EV是实际完成或获得的工作价值（你完成了项目50%，用了15周里面的5周$15,000项目=$7,500EV）。CV是项目赚到的和目前花费之间差（CV=EV-AV）。SV是目前赚得的和目前计划赚得的差（SV=EV-PV）。CPI是表达成本绩效的比率。CPI=EV/AC。如果CPI>1，项目赚的比花的多。如果CPI=1,项目提前于计划。如果CPI<1，项目落后于计划。 
 
97、C 敏捷中，有效的“知识分享”是成功的关键因素，它需要所有团队成员和干系人对关键信息的近乎实时的交流。为了促进知识分享，敏捷在流程中运用标准实践， 
例如使用全面专家/多功能团队， 
自主管理和自我约束团队， 
协作， 
每日站立会议， 
迭代/冲刺计划， 
发布计划， 
结对编程和结对轮换 
项目回顾/反思 
现场客户支持。 
当然敏捷的第六项原则是“开发团队内部和之间最有效和最有力的传达信息的方式是面对面对话。”从这层意思上说，敏捷倾向于和鼓励所有干系人和团队成员的协作，因为沟通的最好方式是面对面对话，并且反过来，促进知识分享。 
 
98、A 逐步完善的定义是指基于随着项目的推进，计划和细节不可避免地会发生变化，但是趋向精炼的期望，不断修正计划。 
[《敏捷评估和计划》迈克•科恩][敏捷分析和设计] 
 
99、A A项有利于在一个敏捷项目中增强团队信任。 
 
100、D 在传统项目管理初始阶段需进行的是定义商业目标。 

ZZZZZ